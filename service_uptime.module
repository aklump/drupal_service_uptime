<?php
/**
 * @file
 * Base module file for service_uptime
 *
 * @defgroup service_uptime Service Uptime Module
 * @{
 */

/**
 * @var SERVICE_UPTIME_URL_STATS
 * This is the base url for stats
 */
define('SERVICE_UPTIME_URL_STATS', 'http://www.serviceuptime.com/users/servicestat.php');

/**
 * @var SERVICE_UPTIME_REGEX
 * This is the regex for checking user token links
 */
define('SERVICE_UPTIME_REGEX', '/^https?:\/\/www\.serviceuptime.com\/users\/(?:uptime)?monitoring\.php(\?(S=\w+)\&(Id=\d+))$/');

/**
 * @var SERVICE_UPTIME_URL_STATS
 * The url to be used to link to stats page
 */
define('SERVICE_UPTIME_PATH_DRUPAL_STATS', 'admin/reports/service-uptime/stats');

/**
 * @var SERVICE_UPTIME_PATH_DRUPAL_SETTINGS
 * The internal path to settings page
 */
define('SERVICE_UPTIME_PATH_DRUPAL_SETTINGS', 'admin/reports/service-uptime/settings');

/**
 * @var SERVICE_UPTIME_URL_AFFILIATE_EXPLANATION
 * The url to the affiliate program info
 */
define('SERVICE_UPTIME_URL_AFFILIATE_EXPLANATION', 'https://www.serviceuptime.com/affiliate.php');

/**
 * @var SERVICE_UPTIME_EXAMPLE_LINK
 * The example format of a link
 */
define('SERVICE_UPTIME_EXAMPLE_LINK', 'https://www.serviceuptime.com/users/monitoring.php?S=a07db1b0170f92d081fec95806daef7f&Id=12259');

/**
 * @var SERVICE_UPTIME_PATH_CHECK
 * The internal drupal path to the check url for SU to ping
 */
define('SERVICE_UPTIME_PATH_CHECK', 'service-uptime/check');

/**
 * Get the affiliate or non-affiliated link to service uptime
 */
function _service_uptime_url() {
  $url = 'http://www.ServiceUptime.com/';
  //@todo add in affiliated link checking
  if (1) {
    $url .= '?aff=R779';
  }
  return $url;
}

/**
 * Get an <a> tag with the correctly formatted affiliate link
 */
function _service_uptime_l($title = '', $url = '') {
  $title = empty($title) ? 'www.ServiceUptime.com' : $title;
  $url = empty($url) ? _service_uptime_url() : $url;
  return l($title, $url, array('attributes' => array('onclick' => 'window.open(this.href); return false;')));
}

/**
 * Implementation of hook_perm()
 */
function service_uptime_permission() {
  return array(
    'administer service_uptime' => array(
      'title' => t('Administer service_uptime'),
      'description' => t('Perform administration tasks for service_uptime.'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 */
function service_uptime_menu() {
  $items = array();

  $items['admin/reports/service-uptime'] = array(
    'title' => 'Service Uptime',
    'page callback' => 'service_uptime_stats_page',
    'access arguments' => array('administer service_uptime'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'service_uptime.pages.inc',
  );
  $items[SERVICE_UPTIME_PATH_DRUPAL_STATS] = array(
    'title' => 'View Stats',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items[SERVICE_UPTIME_PATH_DRUPAL_SETTINGS] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('service_uptime_admin_settings'),
    'access arguments' => array('administer service_uptime'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'service_uptime.admin.inc',
  );

  $items[SERVICE_UPTIME_PATH_CHECK] = array(
    'title' => 'title',
    'description' => 'description',
    'page callback' => 'service_uptime_check_page',
    'access callback' => 'service_update_is_allowed',
    'type' => MENU_CALLBACK,
    'file' => 'service_uptime.pages.inc',
  );
  return $items;
}

/**
 * Determines if the server requesting the page is allowed to do so
 */
function service_update_is_allowed() {
  return TRUE;
  return in_array($_SERVER['HTTP_HOST'], array(
    'serviceuptime.com',
  ));
}

/**
 * Return the service uptime query string for this website
 */
function _service_uptime_get_qs() {
  if (($qs = variable_get('service_uptime_qs', NULL)) && preg_match(SERVICE_UPTIME_REGEX, $qs, $found) && $found[1]) {
    return $found[1];
  };
  return FALSE;
}

/**
 * Implementation of hook_theme
 */
function service_uptime_theme($existing, $type, $theme, $path) {
  return array(
    'service_uptime_configure_message' => array(
      'arguments' => array(),
      'file' => 'service_uptime.pages.inc',
    ),
  );
}

/**
 * Get the private key (URL query k=)
 */
function _service_uptime_private_key() {
  return variable_get('service_uptime_private_key', NULL);
}

/**
 * Get the hash (Search String)
 */
function _service_uptime_hash($seed = NULL) {
  $seed = empty($seed) ? _service_uptime_private_key() : $seed;
  if ($seed) {
    $token = md5($seed . drupal_get_private_key());
    return $token;
  }
  return FALSE;
}

/** @} */ //end of group service_uptime
